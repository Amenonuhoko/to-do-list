{"version":3,"sources":["Actions/index.js","Components/Todos.js","Components/Cards.js","Components/Categories.js","Components/App.js","reportWebVitals.js","Reducers/addToDo.js","Reducers/visibilityFilter.js","Reducers/addCard.js","Reducers/editTitle.js","Reducers/index.js","index.js"],"names":["VisibilityFilters","connect","allToDo","className","state","todos","title","addCard","props","useState","collapse","setCollapse","completed","setCompleted","id","text","setTitle","handleComplete","onPress","size","name","type","autoComplete","value","onChange","e","target","onKeyDown","key","content","cardID","dispatch","payload","cardId","editCardTitle","style","display","justifyContent","cards","cardTitle","setCardTitle","placeholder","map","el","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nextTodoId","reduce","maxId","todo","Math","max","addToDo","action","visibilityFilter","filter","length","active","editTitle","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ade0f0c.chunk.js","sourcesContent":["export const addCard = (payload) => {\r\n\tconst content = { cardId: payload.cardId, text: payload.text };\r\n\treturn {\r\n\t\ttype: \"ADD_CARD\",\r\n\t\t...content,\r\n\t};\r\n};\r\nexport const editCardTitle = (payload) => {\r\n\tconst content = { cardId: payload.cardId, text: payload.text };\r\n\treturn {\r\n\t\ttype: \"EDIT_CARD_TITLE\",\r\n\t\t...content,\r\n\t};\r\n};\r\nexport const addToDo = (payload) => {\r\n\tconst content = { text: payload.text };\r\n\treturn {\r\n\t\ttype: \"ADD_TODO\",\r\n\t\t...content,\r\n\t};\r\n};\r\nexport const setVisibilityFilter = (filter) => {\r\n\treturn {\r\n\t\ttype: \"SET_VISIBILITY_FILTER\",\r\n\t\tfilter,\r\n\t};\r\n};\r\nexport const toggleTodo = (id) => {\r\n\treturn {\r\n\t\ttype: \"TOGGLE_TODO\",\r\n\t\tid,\r\n\t};\r\n};\r\nexport const VisibilityFilters = {\r\n\tSHOW_ALL: \"SHOW_ALL\",\r\n\tSHOW_COMPLETE: \"SHOW_COMPLETED\",\r\n\tSHOW_ACTIVE: \"SHOW_ACTIVE\",\r\n};\r\n","// Default\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { connect } from \"react-redux\";\r\n// CSS\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport \"./Todos.css\";\r\n\r\nconst Todos = ({ allToDo }) => {\r\n\treturn (\r\n\t\t<div className=\"todos-container\">\r\n\t\t\t{/* first child List */}\r\n\t\t\t<ul>\r\n\t\t\t\t{/* {childLists.map((el, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t<CategoryChildrenContent />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})} */}\r\n\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className=\"new-list-button\">\r\n\t\t\t\t\t\t<AwesomeButton>+</AwesomeButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect()(Todos);\r\n","// Default\r\nimport React, { useState } from \"react\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { connect } from \"react-redux\";\r\n// CSS\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport \"./Cards.css\";\r\n// Redux\r\nimport { editCardTitle } from \"../Actions\";\r\n// Component\r\nimport Todos from \"./Todos\";\r\n\r\nconst Cards = (props) => {\r\n\t// STATES\r\n\tconst [collapse, setCollapse] = useState(false);\r\n\tconst [completed, setCompleted] = useState(false);\r\n\tconst [title, setTitle] = useState(props.title[props.id].text);\r\n\t// HANDLE\r\n\tconst handleClick = () => {\r\n\t\tsetCollapse(collapse ? false : true);\r\n\t};\r\n\tconst handleComplete = () => {\r\n\t\tsetCompleted(completed ? false : true);\r\n\t};\r\n\tconst handleChange = (e) => {\r\n\t\tsetTitle(e.target.value);\r\n\t};\r\n\tconst handlePress = (e) => {\r\n\t\tif (e.key === \"Enter\") {\r\n\t\t\tconst content = {\r\n\t\t\t\tcardID: props.id,\r\n\t\t\t\ttext: title,\r\n\t\t\t};\r\n\t\t\tprops.dispatch(editCardTitle(content));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<div className=\"selected-card\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t<div className=\"hide-button\">\r\n\t\t\t\t\t\t<AwesomeButton onPress={handleClick} size=\"icon\">\r\n\t\t\t\t\t\t\t{collapse ? \"-\" : \"+\"}\r\n\t\t\t\t\t\t</AwesomeButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonKeyDown={handlePress}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<div className=\"active-state\" style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div className=\"button b2\" id=\"active-button\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"checkbox\" />\r\n\t\t\t\t\t\t\t<div className=\"knobs\">\r\n\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"layer\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n\t\t\t\t\t\t{completed ? (\r\n\t\t\t\t\t\t\t<AwesomeButton\r\n\t\t\t\t\t\t\t\ttype=\"secondary\"\r\n\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\tonPress={handleComplete}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCOMPLETED\r\n\t\t\t\t\t\t\t</AwesomeButton>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<AwesomeButton\r\n\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\tonPress={handleComplete}\r\n\t\t\t\t\t\t\t></AwesomeButton>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>{collapse ? <Todos /> : null}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttodos: state,\r\n\t\ttitle: state.addCard,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cards);\r\n","// Default\nimport React, { useState } from \"react\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport { connect } from \"react-redux\";\n// CSS\nimport \"./Categories.css\";\n// Redux\nimport { addCard } from \"../Actions\";\n// Components\nimport Cards from \"./Cards\";\n\n// The Rest\nconst Categories = (props) => {\n\t// State\n\tconst [cardTitle, setCardTitle] = useState(\"\");\n\t// Handle\n\tconst handleChange = (e) => {\n\t\tsetCardTitle(e.target.value);\n\t};\n\tconst handlePress = (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\tconst content = {\n\t\t\t\ttext: cardTitle,\n\t\t\t};\n\t\t\tprops.dispatch(addCard(content));\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"header-card\">\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<h1>To Do List</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"add-card-button\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Add To Dos\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tvalue={cardTitle}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonKeyDown={handlePress}\n\t\t\t\t\t></input>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{props.cards.map((el, i) => {\n\t\t\t\treturn <Cards key={i} id={el.cardID} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcards: state.addCard,\n\t};\n};\n\nexport default connect(mapStateToProps)(Categories);\n\nconst CategoryChildrenContent = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<AwesomeButton>+</AwesomeButton>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<input placeholder=\"Things To Do\" type=\"text\"></input>\n\t\t\t\t</div>\n\t\t\t\t{/* collapsible desc */}\n\t\t\t\t<div className=\"description\">\n\t\t\t\t\t<p></p>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"Category buttons\"\n\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"space-between\" }}\n\t\t\t\t>\n\t\t\t\t\t<AwesomeButton type=\"secondary\"> Category</AwesomeButton>\n\t\t\t\t\t<AwesomeButton type=\"secondary\"> Finished </AwesomeButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <div> IF ELSE HERE </div> */}\n\t\t</div>\n\t);\n};\n\nconst SubList = () => {\n\treturn (\n\t\t<ul>\n\t\t\t<li></li>\n\t\t</ul>\n\t);\n};\n","// Default\r\nimport React from \"react\";\r\n// CSS\r\nimport \"./App.css\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\n// Components\r\nimport Categories from \"./Categories\";\r\n\r\nconst App = () => (\r\n\t<main>\r\n\t\t<Categories />\r\n\t</main>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function nextTodoId(todos) {\r\n\tconst maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), 0);\r\n\treturn maxId + 1;\r\n}\r\n\r\nconst addToDo = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_TODO\":\r\n\t\t\treturn [\r\n\t\t\t\t...state,\r\n\t\t\t\t{\r\n\t\t\t\t\tid: nextTodoId(state),\r\n\t\t\t\t\ttext: action.text,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\tcase \"EDIT_TODO\":\r\n\t\t\treturn [];\r\n\t\tcase \"TOGGLE_TODO\":\r\n\t\t\treturn state.map((todo) =>\r\n\t\t\t\ttodo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n\t\t\t);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default addToDo;\r\n","import { VisibilityFilters } from \"../Actions\";\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_VISIBILITY_FILTER\":\r\n\t\t\treturn action.filter;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default visibilityFilter;\r\n","const addCard = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_CARD\":\r\n\t\t\treturn [\r\n\t\t\t\t...state,\r\n\t\t\t\t{\r\n\t\t\t\t\tcardID: state[state.length - 1]\r\n\t\t\t\t\t\t? state[state.length - 1].cardID + 1\r\n\t\t\t\t\t\t: 0,\r\n\t\t\t\t\ttext: action.text,\r\n\t\t\t\t\tactive: true,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport default addCard;\r\n","const editTitle = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"EDIT_CARD_TITLE\":\r\n\t\t\treturn [\r\n\t\t\t\t...state,\r\n\t\t\t\t{\r\n\t\t\t\t\tcardID: action.cardID,\r\n\t\t\t\t\ttext: action.text,\r\n\t\t\t\t\tcompleted: false,\r\n\t\t\t\t\tactive: true,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport default editTitle;\r\n","import { combineReducers } from \"redux\";\r\nimport addToDo from \"./addToDo\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport addCard from \"./addCard\";\r\nimport editTitle from \"./editTitle\";\r\n\r\nexport default combineReducers({\r\n\taddCard,\r\n\taddToDo,\r\n\teditTitle,\r\n\tvisibilityFilter,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport rootReducer from \"./Reducers\";\n\nconst store = createStore(\n\trootReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}